[tool.poetry]
name = "graphlet"
version = "0.1.1"
description = "Graphlet AI Knowledge Graph Factory"
authors = ["Russell Jurney <rjurney@graphlet.ai>"]
packages = [
    { include = "graphlet" }
]
license = "APACHE-2.0"
readme = "README.md"
homepage = "https://graphlet.ai"
repository = "https://github.com/Graphlet-AI/graphlet"
keywords = [
    "graphlet",
    "motif",
    "graph",
    "network",
    "knowledge graph",
    "entity resolution",
    "spark",
    "pyspark",
    "etl",
]
classifiers = [
    "Development Status :: 1 - Planning",
    "Environment :: Console",
    "Framework :: Flake8",
    "Framework :: Pytest",
    "Framework :: tox",
    "Intended Audience :: Developers",
    "Intended Audience :: Financial and Insurance Industry",
    "Intended Audience :: Information Technology",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: Apache Software License",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: Implementation :: PyPy",
    "Topic :: Database",
    "Topic :: Database :: Database Engines/Servers",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Topic :: Software Development",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Utilities",
    "Typing :: Typed",
]
include = ["LICENSE"]

[tool.poetry.dependencies]
python = "^3.10"
pyspark = "^3.2.1"
typeguard = "^2.13.3"
xmltodict = "^0.13.0"
ujson = "^5.4.0"
types-ujson = "^5.4.0"
types-xmltodict = "^0.13.0"
tqdm = "^4.64.0"
requests = "^2.28.1"
types-requests = "^2.28.7"
tqdm-stubs = "^0.2.1"
pandas = "^1.4.3"
pyarrow = "^9.0.0"
cloudpickle = "^2.1.0"
pandera = "^0.11.0"
networkx = "^2.8.6"

[tool.poetry.dev-dependencies]
pytest = "^7.1.2"
black = "^22.6.0"
flake8 = "^4.0.1"
isort = "^5.10.1"
mypy = ">=0.971"
flake8-docstrings = "^1.6.0"
pydocstyle = "^6.1.1"
flake8-simplify = "^0.19.2"
flake8-unused-arguments = "^0.0.10"
flake8-class-attributes-order = "^0.1.3"
flake8-comprehensions = "^3.10.0"
flake8-return = "^1.1.3"
flake8-use-fstring = "^1.3"
flake8-builtins = "^1.5.3"
flake8-functions-names = "^0.3.0"
flake8-comments = "^0.1.2"
pre-commit = "^2.19.0"
ipython = "^8.4.0"
ipykernel = "^6.15.1"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 120
target-version = ['py310']
include = ['graphlet', 'tests']

[tool.isort]
profile = "black"
src_paths = ["graphlet", "tests"]

[tool.mypy]
python_version = "3.10"
mypy_path = ["graphlet", "tests"]
warn_return_any = true
warn_unused_configs = true
warn_redundant_casts = true
warn_unused_ignores = true